#!/usr/bin/perl
#v3.0

# subset_mers.pl kmers_fwd_rc 25
#  subset_mers.pl kmers_fwd_rc
# k is optional

no warnings 'deprecated';

my $infile=$ARGV[0]; # probably kmers_fwd_rc
my $k=5;
if ($ARGV[1]) {
    $k=$ARGV[1];
}

if ($k > 5) {
    my $count=0;
    foreach $w qw(A C G T) {
	foreach $x qw(A C G T) {
	    foreach $y qw(A C G T) {
		foreach $m qw(A C G T) {
		    foreach $n qw(A C G T) {
			#foreach $t qw(A C G T) {
			#foreach $s qw(A C G T) {
			my $z=$w.$x.$y.$m.$n;
			$zarray[$count]=$z;
			$count++;
			#}
			#}
		    }
		}
	    }
	}
    }
} elsif ($k == 5) {
    my $count=0;
    foreach $w qw(A C G T) {
	foreach $x qw(A C G T) {
	    foreach $y qw(A C G T) {
		foreach $m qw(A C G T) {
		    #foreach $t qw(A C G T) {
		    #foreach $s qw(A C G T) {
		    my $z=$w.$x.$y.$m;
		    $zarray[$count]=$z;
		    $count++;
		    #}
		    #}
		}
	    }
	}
    }
} elsif ($k == 4) {
    my $count=0;
    foreach $w qw(A C G T) {
	foreach $x qw(A C G T) {
	    foreach $y qw(A C G T) {
		my $z=$w.$x.$y;
		$zarray[$count]=$z;
		$count++;
	    }
	}
    }
} elsif ($k < 4) {
    my $count=0;
    foreach $w qw(A C G T) {
	my $z=$w;
	$zarray[$count]=$z;
	$count++;
    }
}

$count=0;
open IN,"$infile";
my $out=$zarray[$count].".mers";
open OUT,">$out";
while (my $line=<IN>){
    if ($line =~ /^$zarray[$count]/) {
	print OUT "$line";
    } else {
	close OUT;
	until ($line =~ /^$zarray[$count]/) {
	    $count++;
	    $out=$zarray[$count].".mers";
	    open OUT,">$out";
	    close OUT;

	}

	$out=$zarray[$count].".mers";
	open OUT,">$out";
	print OUT "$line";
	
    }
}
close OUT;
